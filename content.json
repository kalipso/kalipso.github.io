{"meta":{"title":"낭만디비술사","subtitle":null,"description":null,"author":"kalipso","url":"https://kalipso.github.io"},"pages":[],"posts":[{"title":"Github Page에 Hexo 블로그 만들기","slug":"Github-Page에-Hexo-블로그-만들기","date":"2017-11-08T08:02:10.000Z","updated":"2017-11-08T09:03:35.379Z","comments":true,"path":"2017/11/08/Github-Page에-Hexo-블로그-만들기/","link":"","permalink":"https://kalipso.github.io/2017/11/08/Github-Page에-Hexo-블로그-만들기/","excerpt":"","text":"프롤로그올해 여름, 11개월 프로젝트를 마치고 나와서 오랜만에 티스토리 블로그를 접속했더니 접속이 되지 않았습니다. 다음 고객센터를 페이지를 통해서 티스토리 담당자랑 한참 실갱이를 했는데, 누군가 해킹을 해서 내 블로그와 글을 모두 삭제하였고, 해당 블로그는 결국 살릴 수 없다고 합니다. 쿠궁 ㅠㅠ 가끔씩 써오기는 했지만 나름 10년을 써왔던 블로그인데 한순간에 날아가버린 거죠.. 이렇게 허무할 수가.. 눈물을 머금고 블로그 선택에 대한 포스팅(내 글을 오래 남기기 위한 블로그 선택)들을 찾아보다가 GitHub Page에서 Hexo를 이용해 블로그를 구축하는 방법을 선택하였는데, 선택의 주된 이유를 정리해보면 이렇습니다. 변경 자유도가 높다. 보안 및 컨텐츠 유실로부터 비교적 안전하다. web환경에서 로그인 및 권한획득 과정이 없음. 기본적으로 PC에서 소스를 관리함. GitHub를 통해 버전 관리가 가능함. 모든 기능을 제한없이 무료로 사용할 수 있다. Jekyll과 Hexo를 비교한 결과, Hexo가 더 예쁘다. A fast, simple &amp; powerful blog framework 약간의 삽질을 통해 Hexo 블로그를 만들게 되었는데, 그 과정을 아래에 기록합니다. # GitHub으로 정적 페이지 생성하기GitHub에서는 Repository를 생성하여 정적 페이지를 서비스할 수 있는 기능을 제공합니다. 1. Repository 생성GitHub에서 “New Repository” 선택 후 Repository Name, Description 등 입력하고 Repository을 생성합니다. ※ Add License 등 옵션은 선택하지 않음 2. Clone then Repository1234#1. Repository를 \"pub\"저장소로 cloned:\\blog&gt; git clone https://github.com/username/username.github.io.git pubCloning into 'pub'...warning: You appear to have cloned an empty repository. 3. Hello world 서비스 테스트12345678#2. index.html 생성d:\\blog&gt; cd pubd:\\blog\\pub&gt; echo \"Hello World\" &gt; index.html#. Remote 저장소에 변경내역 Pushd:\\blog\\pub&gt; git add --alld:\\blog\\pub&gt; git commit -m \"Initial commit\"d:\\blog\\pub&gt; git push -u origin maser 4. 접속확인페이지 접속 확인 브라우저에서 Repository name으로 접속하여 접속 확인 ※ 위에서 pub 폴더는 서비스용이 아니고 테스트 용도입니다. # Hexo 설치1. 사전설치설치 전 준비 Hexo를 이용하기 위해서는 다음 구성요소들이 사전에 설치되어 있어야 합니다. Node.js Git 2. Hexo Client 및 저장소 설정1234567#1. hexo client 설치D:\\blog&gt; npm install hexo-cli-g#2. hexo 저장소 생성 및 설치D:\\blog&gt; hexo init srcD:\\blog&gt; cd srcD:\\blog\\src&gt; npm install 3. _config.yml 파일 설정hexo의 기본정보를 셋팅합니다. “Plugins”의 첫번째 문자가 대문자임에 유의하세요. (3일 동안 삽질했다는 건 비밀) 12345678910111213141516171819202122# Site# language를 ko로 만들면 Home &gt; 홈으로 나오는 등의 부작용title: 낭만디비술사subtitle:description:author: kalipsolanguage: entimezone: Asia/Seoul... 중략 ...## Plugins: https://hexo.io/plugins/Plugins:- hexo-deployer-git... 중략 ...# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/kalipso/kalipso.github.io.git 4. Hexo 로컬 서버에서 확인로컬 서버를 만들고 확인할 수 있습니다. 기본적으로 로컬 페이지는 포트 4000입니다.12345# server 설치D:\\blog\\src&gt;npm install hexo-server --save# 서버 구동D:\\blog\\src&gt;hexo server http://localhost:4000 에서 확인 가능 5. GitHub에 Deploy아래에서 hexo-deployer-git은 _config.yml에 정의되어 있기 때문에, server를 구동하기 전에 먼저 설치되어야 합니다.아래 명령을 통해 간단하게 Github에 Deploy할 수 있습니다.12345# deployer 설치D:\\blog\\src&gt;npm install hexo-deployer-git --save# generate 및 github-deployD:\\blog\\src&gt;hexo deploy --generate http://kalipso.github.io 에 deploy 완료. # Theme 적용하기https://hexo.io/themes/ 에 접속해서 Hexo에서 사용할 수 있는 여러가지 Theme를 확인하고 선택할 수 있습니다.저는 많은 블로그들이 사용하고 있는 hueman(https://github.com/ppoffice/hexo-theme-hueman/wiki/Installation)을 사용했습니다. (중국어로 된 사이트도 많은데, 언어 문제로 포기..) 대부분의 Theme가 sample 페이지와 Installation 문서를 포함한 Github 페이지를 제공하고 있기 때문에 설치가 어렵지 않습니다.다만, 로컬에서 Server 재시작에도 변경사항이 제대로 반영되지 않을때, clean 명령을 통해 저장소를 초기화할 수 있습니다. 12D:\\blog\\src&gt;hexo cleanD:\\blog\\src&gt;hexo server ##참고 Github Pages와 Hexo를 통해 30분만에 기술 블로그 만들기(https://www.holaxprogramming.com/2017/04/16/github-page-and-hexo/) 워드프레스보다 쉬운 Hexo 블로그 시작하기(http://futurecreator.github.io/2016/06/14/get-started-with-hexo/)","categories":[{"name":"Application","slug":"Application","permalink":"https://kalipso.github.io/categories/Application/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://kalipso.github.io/tags/hexo/"},{"name":"블로그 만들기","slug":"블로그-만들기","permalink":"https://kalipso.github.io/tags/블로그-만들기/"},{"name":"github","slug":"github","permalink":"https://kalipso.github.io/tags/github/"}]}]}